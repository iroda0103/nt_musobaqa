const http = require('http')
const path = require('path')
const fs = require('fs')
//req.params
function queryTugirlash(url) {
    let query = {}
    let indexQuery = url.lastIndexOf('?')
    if (indexQuery != -1) {
        let queryArr = url.slice(indexQuery + 1).split('&')
        queryArr = queryArr.filter(elem => elem != '')
        queryArr.map(elem => {
            let elemData = elem.split('=')
            query[elemData[0]] = elemData[1]
        })
    }
    return query
}

class express {
    constructor() {
        this.yullar = []
        this.uses = []
        this.port = 3000
        this.server = http.createServer(async (req, res) => {
            req.body = {}
            req.query = {}
            req.params = {}
            req.header = (elem) => req.headers[elem]

            res.sendFile = (path2) => {
                // var filePath = path.join(__dirname, 'myfile.mp3');
                // var stat = fileSystem.statSync(path);

                // response.writeHead(200, {
                //     'Content-Type': 'audio/mpeg',
                //     'Content-Length': stat.size
                // });

                // var readStream = fileSystem.createReadStream(filePath);
                let b = ''
                //    let a= fs.readFile('kk/index.txt','utf-8',(err,files)=>{
                //     console.log(files);
                //     b
                //    })
                console.log(a);
                // readStream.pipe(res);
            }
            res.json = (data) => {
                res.setHeader('Content-Type','application/json')
                res.end(JSON.stringify(data))
            }
            res.status = (code) => {
                // res.status = code
                res.statusCode = code
                return res
            }

            res.send = (data) => {
                if(typeof(data)=='object'){
                  return  res.json(data)
                }
                
                res.end(data)
            }
            await req.on('data', (chunk) => {
                req.body = JSON.parse(chunk.toString())
            });
            req.on('end', () => {
                console.log('tugadi');
            })

            req.query = queryTugirlash(req.url)

            console.log(req.query);
            for (const handler of this.uses) {
                handler(req, res)
            }
            for (const { method, path, handler } of this.yullar) {

                let pathArr = path.split('/')
                let reqUrlArr = req.url.split('/')
                pathArr.forEach((element, index) => {
                    if (element.includes(':')) {
                        if (reqUrlArr[index] == +(reqUrlArr[index])) {
                            reqUrlArr[index] = +(reqUrlArr[index])
                        }
                        req.params[element.slice(1)] = reqUrlArr[index]
                    }
                });
                console.log(req.params);

                if (method == req.method && req.method == method) {
                    return handler(req, res)
                }
            }

            res.statusCode(404)
            res.end('Not Found')
        })
    }
    use(handler) {
        this.uses.push(handler)
    }
    get(path, handler) {
        this.yullar.push({
            method: "GET",
            path,
            handler
        })
    }
    post(path, handler) {
        this.yullar.push({
            method: "GET",
            path,
            handler
        })
    }
    put(path, handler) {
        this.yullar.push({
            method: "GET",
            path,
            handler
        })
    }
    delete(path, handler) {
        this.yullar.push({
            method: "GET",
            path,
            handler
        })
    }
    listen(PORT, handler) {
        this.server.listen(PORT, handler)
    }
}

const express1 = new express()
express1.use((req, res) => {
    console.log('use ishladi');
})
express1.get('/:id/book/:count/ll', (req, res) => {
    const { content, xayr, son } = req.body
    console.log(req.headers['aa'], 'header', req.header('aa'), 'sss')
    // res.status(303).json([{ sas: "s" }])
    // console.log(res.status.json);
    // res.sendFile(path.join(__dirname, 'index.txt'))
    // res.json([{ sas: "s" }])
    
    res.json([{ sas: "s" }])
})

express1.listen(3000, () => {
    console.log('server boshlandi');
})
// export const express=express
